#Instruction
#MNIST 构建多层感知器神经网络对数字图片进行文本识别
#数据源：keras里已经包含了此数据集
#运行方式：直接运行
#运行结果：Test score,Test accuracy


from __future__ import print_function
import numpy as np
%matplotlib inline
np.random.seed(9999)

import keras
from keras.datasets import mnist
from keras.models import Sequential
from keras.layers.core import Dense,Dropout,Activation
from keras.optimizers import SGD,Adam,RMSprop
from keras.utils import np_utils
from keras.utils.vis_utils import plot_model as plot
import pydot


(X_train,y_train),(X_test,y_test)= mnist.load_data()
X_train = X_train.reshape(60000,28*28)
X_test = X_test.reshape(10000,28*28)
X_train = X_train.astype('float32')
X_test = X_test.astype('float32')
X_train /=255
X_test /=255


batch_size = 128
nb_classes = 10
nb_epoch = 20

Y_train = np_utils.to_categorical(y_train,nb_classes)
Y_test = np_utils.to_categorical(y_test,nb_classes)

model = Sequential()
model.add(Dense(500,input_shape=(28*28,)))
model.add(Activation('relu'))
model.add(Dropout(0.2))
model.add(Dense(500))
model.add(Activation('relu'))
model.add(Dropout(0.2))
model.add(Dense(500))
model.add(Activation('relu'))
model.add(Dropout(0.2))
model.add(Dense(10))
model.add(Activation('softmax'))

model.summary()

plot(model, to_file='mlp_model.png', show_shapes=True)

model.compile(loss='categorical_crossentropy',
              optimizer=RMSprop(),
              metrics=['accuracy'])

history = model.fit(X_train, Y_train,
                   batch_size=batch_size,
                   epochs=nb_epoch,
                   verbose=1,
                   validation_data=(X_test,Y_test))


score = model.evaluate(X_test,Y_test,verbose=0)
print('Test score:',score[0])
print('Test accuracy:',score[1])
